/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a anythingadaptor -i /home/dxnu/dxnu-github/deepin-anything/src/server/include/core/base_event_handler.h -l base_event_handler /home/dxnu/dxnu-github/deepin-anything/obj-x86_64-linux-gnu/src/server/my.test.Anything.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "anythingadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class IAnythingAdaptor
 */

IAnythingAdaptor::IAnythingAdaptor(base_event_handler *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

IAnythingAdaptor::~IAnythingAdaptor()
{
    // destructor
}

void IAnythingAdaptor::addPath(const QString &fullPath)
{
    // handle method call my.test.IAnything.addPath
    parent()->addPath(fullPath);
}

bool IAnythingAdaptor::hasLFT(const QString &path)
{
    // handle method call my.test.IAnything.hasLFT
    return parent()->hasLFT(path);
}

void IAnythingAdaptor::index_files_in_directory(const QString &directory_path)
{
    // handle method call my.test.IAnything.index_files_in_directory
    parent()->index_files_in_directory(directory_path);
}

bool IAnythingAdaptor::removePath(const QString &fullPath)
{
    // handle method call my.test.IAnything.removePath
    return parent()->removePath(fullPath);
}

QStringList IAnythingAdaptor::search(const QString &path, const QString &keywords, int offset, int max_count)
{
    // handle method call my.test.IAnything.search
    return parent()->search(path, keywords, offset, max_count);
}


#include "anythingadaptor.moc"
