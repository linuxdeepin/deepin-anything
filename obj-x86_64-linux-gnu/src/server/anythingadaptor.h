/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a anythingadaptor -i /home/dxnu/dxnu-github/deepin-anything/src/server/include/core/base_event_handler.h -l base_event_handler /home/dxnu/dxnu-github/deepin-anything/obj-x86_64-linux-gnu/src/server/my.test.Anything.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ANYTHINGADAPTOR_H
#define ANYTHINGADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "/home/dxnu/dxnu-github/deepin-anything/src/server/include/core/base_event_handler.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface my.test.IAnything
 */
class IAnythingAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "my.test.IAnything")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"my.test.IAnything\">\n"
"    <method name=\"search\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"keywords\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"max_count\"/>\n"
"    </method>\n"
"    <method name=\"removePath\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"fullPath\"/>\n"
"    </method>\n"
"    <method name=\"hasLFT\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"    </method>\n"
"    <method name=\"addPath\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"fullPath\"/>\n"
"    </method>\n"
"    <method name=\"index_files_in_directory\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"directory_path\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    IAnythingAdaptor(base_event_handler *parent);
    virtual ~IAnythingAdaptor();

    inline base_event_handler *parent() const
    { return static_cast<base_event_handler *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void addPath(const QString &fullPath);
    bool hasLFT(const QString &path);
    void index_files_in_directory(const QString &directory_path);
    bool removePath(const QString &fullPath);
    QStringList search(const QString &path, const QString &keywords, int offset, int max_count);
Q_SIGNALS: // SIGNALS
};

#endif
